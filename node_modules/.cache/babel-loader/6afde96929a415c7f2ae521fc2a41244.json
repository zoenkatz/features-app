{"ast":null,"code":"var _jsxFileName = \"/Users/zoekatz/apps/cai-app/src/components/FeaturesTable/TablePagination.tsx\";\nimport { TablePagination as _MuiTablePagination } from '@material-ui/core';\nimport React, { useCallback } from 'react';\nconst rowsPerPageOptions = [5, 10, 25, 50]; // avoid all of the redraws caused by the internal withStyles\n\nconst interestingPropsEqual = (prevProps, nextProps) => prevProps.count === nextProps.count && prevProps.rowsPerPage === nextProps.rowsPerPage && prevProps.page === nextProps.page && prevProps.onChangePage === nextProps.onChangePage && prevProps.onChangeRowsPerPage === nextProps.onChangeRowsPerPage; // a bit of a type hack to keep OverridableComponent working as desired\n\n\nconst MuiTablePagination = React.memo(_MuiTablePagination, interestingPropsEqual);\nexport function TablePagination({\n  instance\n}) {\n  const {\n    state: {\n      pageIndex,\n      pageSize,\n      rowCount = instance.rows.length\n    },\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize\n  } = instance;\n  const handleChangePage = useCallback((event, newPage) => {\n    if (newPage === pageIndex + 1) {\n      nextPage();\n    } else if (newPage === pageIndex - 1) {\n      previousPage();\n    } else {\n      gotoPage(newPage);\n    }\n  }, [gotoPage, nextPage, pageIndex, previousPage]);\n  const onChangeRowsPerPage = useCallback(e => {\n    setPageSize(Number(e.target.value));\n  }, [setPageSize]);\n  return rowCount ? /*#__PURE__*/React.createElement(MuiTablePagination, {\n    rowsPerPageOptions: rowsPerPageOptions,\n    component: \"div\",\n    count: rowCount,\n    rowsPerPage: pageSize,\n    page: pageIndex,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: onChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }) : null;\n}","map":{"version":3,"sources":["/Users/zoekatz/apps/cai-app/src/components/FeaturesTable/TablePagination.tsx"],"names":["TablePagination","_MuiTablePagination","React","useCallback","rowsPerPageOptions","interestingPropsEqual","prevProps","nextProps","count","rowsPerPage","page","onChangePage","onChangeRowsPerPage","MuiTablePagination","memo","instance","state","pageIndex","pageSize","rowCount","rows","length","gotoPage","nextPage","previousPage","setPageSize","handleChangePage","event","newPage","e","Number","target","value"],"mappings":";AAAA,SAASA,eAAe,IAAIC,mBAA5B,QAAuD,mBAAvD;AACA,OAAOC,KAAP,IAAiDC,WAAjD,QAAoE,OAApE;AAGA,MAAMC,kBAAkB,GAAG,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,CAA3B,C,CAEA;;AACA,MAAMC,qBAAqB,GAAG,CAACC,SAAD,EAAiBC,SAAjB,KAC1BD,SAAS,CAACE,KAAV,KAAoBD,SAAS,CAACC,KAA9B,IACAF,SAAS,CAACG,WAAV,KAA0BF,SAAS,CAACE,WADpC,IAEAH,SAAS,CAACI,IAAV,KAAmBH,SAAS,CAACG,IAF7B,IAGAJ,SAAS,CAACK,YAAV,KAA2BJ,SAAS,CAACI,YAHrC,IAIAL,SAAS,CAACM,mBAAV,KAAkCL,SAAS,CAACK,mBALhD,C,CAOA;;;AAEA,MAAMC,kBAAqB,GAAGX,KAAK,CAACY,IAAN,CAAWb,mBAAX,EAAgCI,qBAAhC,CAA9B;AAEA,OAAO,SAASL,eAAT,CAA2C;AACIe,EAAAA;AADJ,CAA3C,EAEsH;AACzH,QAAM;AACFC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,QAAb;AAAuBC,MAAAA,QAAQ,GAAGJ,QAAQ,CAACK,IAAT,CAAcC;AAAhD,KADL;AAEFC,IAAAA,QAFE;AAGFC,IAAAA,QAHE;AAIFC,IAAAA,YAJE;AAKFC,IAAAA;AALE,MAMFV,QANJ;AAQA,QAAMW,gBAAgB,GAAGvB,WAAW,CAChC,CAACwB,KAAD,EAAgEC,OAAhE,KAAoF;AAChF,QAAIA,OAAO,KAAKX,SAAS,GAAG,CAA5B,EAA+B;AAC3BM,MAAAA,QAAQ;AACX,KAFD,MAEO,IAAIK,OAAO,KAAKX,SAAS,GAAG,CAA5B,EAA+B;AAClCO,MAAAA,YAAY;AACf,KAFM,MAEA;AACHF,MAAAA,QAAQ,CAACM,OAAD,CAAR;AACH;AACJ,GAT+B,EAUhC,CAACN,QAAD,EAAWC,QAAX,EAAqBN,SAArB,EAAgCO,YAAhC,CAVgC,CAApC;AAaA,QAAMZ,mBAAmB,GAAGT,WAAW,CAClC0B,CAAD,IAAO;AACHJ,IAAAA,WAAW,CAACK,MAAM,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP,CAAX;AACH,GAHkC,EAInC,CAACP,WAAD,CAJmC,CAAvC;AAOA,SAAON,QAAQ,gBACP,oBAAC,kBAAD;AACI,IAAA,kBAAkB,EAAEf,kBADxB;AAEJ,IAAA,SAAS,EAAC,KAFN;AAGR,IAAA,KAAK,EAAEe,QAHC;AAIR,IAAA,WAAW,EAAED,QAJL;AAKR,IAAA,IAAI,EAAED,SALE;AAMR,IAAA,YAAY,EAAES,gBANN;AAOR,IAAA,mBAAmB,EAAEd,mBAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,GAUf,IAVA;AAWH","sourcesContent":["import { TablePagination as _MuiTablePagination } from '@material-ui/core'\nimport React, { PropsWithChildren, ReactElement, useCallback } from 'react'\nimport { TableInstance } from 'react-table'\n\nconst rowsPerPageOptions = [5, 10, 25, 50];\n\n// avoid all of the redraws caused by the internal withStyles\nconst interestingPropsEqual = (prevProps: any, nextProps: any) =>\n    prevProps.count === nextProps.count &&\n    prevProps.rowsPerPage === nextProps.rowsPerPage &&\n    prevProps.page === nextProps.page &&\n    prevProps.onChangePage === nextProps.onChangePage &&\n    prevProps.onChangeRowsPerPage === nextProps.onChangeRowsPerPage\n\n// a bit of a type hack to keep OverridableComponent working as desired\ntype T = typeof _MuiTablePagination\nconst MuiTablePagination: T = React.memo(_MuiTablePagination, interestingPropsEqual) as T\n\nexport function TablePagination<T extends object>({\n                                                      instance,\n                                                  }: PropsWithChildren<{ instance: TableInstance<T> }>): ReactElement | null {\n    const {\n        state: { pageIndex, pageSize, rowCount = instance.rows.length },\n        gotoPage,\n        nextPage,\n        previousPage,\n        setPageSize,\n    } = instance\n\n    const handleChangePage = useCallback(\n        (event: React.MouseEvent<HTMLButtonElement, MouseEvent> | null, newPage: number) => {\n            if (newPage === pageIndex + 1) {\n                nextPage()\n            } else if (newPage === pageIndex - 1) {\n                previousPage()\n            } else {\n                gotoPage(newPage)\n            }\n        },\n        [gotoPage, nextPage, pageIndex, previousPage]\n    )\n\n    const onChangeRowsPerPage = useCallback(\n        (e) => {\n            setPageSize(Number(e.target.value))\n        },\n        [setPageSize]\n    )\n\n    return rowCount ? (\n            <MuiTablePagination\n                rowsPerPageOptions={rowsPerPageOptions}\n        component='div'\n    count={rowCount}\n    rowsPerPage={pageSize}\n    page={pageIndex}\n    onChangePage={handleChangePage}\n    onChangeRowsPerPage={onChangeRowsPerPage}\n    />\n) : null\n}\n"]},"metadata":{},"sourceType":"module"}