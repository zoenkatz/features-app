{"ast":null,"code":"export let NodeTypes;\n\n(function (NodeTypes) {\n  NodeTypes[\"METRIC\"] = \"METRIC\";\n  NodeTypes[\"ALEX\"] = \"ALEX\";\n  NodeTypes[\"SUBMETRIC\"] = \"SUBMETRIC\";\n  NodeTypes[\"FEATURE\"] = \"FEATURE\";\n  NodeTypes[\"COMPUTATIONAL_TEMP\"] = \"COMPUTATIONAL_TEMP\";\n})(NodeTypes || (NodeTypes = {}));\n\n;","map":{"version":3,"sources":["/Users/zoekatz/apps/cai-app/src/lib/types.ts"],"names":["NodeTypes"],"mappings":"AAAA,WAAYA,SAAZ;;WAAYA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;GAAAA,S,KAAAA,S;;AAMX","sourcesContent":["export enum NodeTypes {\r\n    METRIC = 'METRIC', \r\n    ALEX = 'ALEX', \r\n    SUBMETRIC = 'SUBMETRIC', \r\n    FEATURE = 'FEATURE',\r\n    COMPUTATIONAL_TEMP = 'COMPUTATIONAL_TEMP'\r\n};\r\n\r\nexport interface INodeAttributes {\r\n    name: string;\r\n    varId: string;\r\n    type: NodeTypes;\r\n    labels: Array<string>;\r\n    domains: Array<string>;\r\n    description: string;\r\n    value: number;\r\n}\r\n\r\nexport interface ICrNode {\r\n    id: string;\r\n    attributes: INodeAttributes;\r\n}\r\n\r\nexport interface ICrFlatNode {\r\n    id: string;\r\n    attributes: INodeAttributes;\r\n    name: string;\r\n    varId: string;\r\n    type: NodeTypes;\r\n    labels: Array<string>;\r\n    domains: Array<string>;\r\n    description: string;\r\n    value: number;\r\n}\r\n\r\nexport interface IColumnNode {\r\n    Header: string,\r\n    accessor: any,\r\n    cell: any\r\n}\r\n\r\nexport interface IModelMetadata {\r\n    labels: Array<string>;\r\n    domains: Array<string>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}