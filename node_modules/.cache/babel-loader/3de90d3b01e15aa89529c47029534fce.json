{"ast":null,"code":"var _jsxFileName = \"/Users/zoekatz/apps/cai-app/src/components/FeaturesTable/FeaturesTable.tsx\";\nimport React, { useEffect } from 'react';\nimport { useTable, useSortBy, useGroupBy, usePagination, useResizeColumns, useRowSelect } from 'react-table'; //import FeaturesTablePagination from './FeaturesTablePagination';\n\nimport { HeaderCheckbox, RowCheckbox } from './FeaturesTableStyles';\n\nconst FeaturesTable = ({\n  columns,\n  data,\n  dispatch,\n  setCurrentPage,\n  pageNumbers,\n  currentPage\n}) => {\n  const selectionHook = hooks => {\n    hooks.allColumns.push(columns => [{\n      id: '_selector',\n      disableResizing: true,\n      disableGroupBy: true,\n      minWidth: 45,\n      width: 45,\n      maxWidth: 45,\n      Header: ({\n        getToggleAllRowsSelectedProps\n      }) => {\n        return /*#__PURE__*/React.createElement(HeaderCheckbox, Object.assign({}, getToggleAllRowsSelectedProps(), {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }\n        }));\n      },\n      Cell: ({\n        row\n      }) => /*#__PURE__*/React.createElement(RowCheckbox, Object.assign({}, row.getToggleRowSelectedProps(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 52\n        }\n      }))\n    }, ...columns]);\n    hooks.useInstanceBeforeDimensions.push(({\n      headerGroups\n    }) => {\n      // fix the parent group of the selection button to not be resizable\n      const selectionGroupHeader = headerGroups[0].headers[0];\n      selectionGroupHeader.canResize = false;\n    });\n  };\n\n  const hooks = [useGroupBy, useSortBy, usePagination, useResizeColumns, useRowSelect, selectionHook];\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    state: {\n      pageIndex,\n      pageSize,\n      selectedRowIds\n    }\n  } = useTable({\n    columns,\n    data\n  }, ...hooks);\n  useEffect(() => {\n    console.log(selectedRowIds, \"selectedRowIds\");\n    dispatch({\n      type: 'SET_SELECTED_ROW_IDS',\n      payload: {\n        selectedRowIds: selectedRowIds\n      }\n    });\n  }, [selectedRowIds]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", Object.assign({}, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, headerGroups.map(headerGroup => /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), headerGroup.headers.map(column => /*#__PURE__*/React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), column.getSortByToggleProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }), column.render('Header'), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 118\n    }\n  }, column.isSorted ? column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼' : '')))))), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), rows.map((row, i) => {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }), row.cells.map(cell => {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 36\n        }\n      }), cell.render('Cell'));\n    }));\n  }))), /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"page-numbers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, pageNumbers.map(pageNumber => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: pageNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: pageNumber,\n      className: pageNumber === currentPage ? 'button-current' : 'next-buttons',\n      onClick: e => setCurrentPage(Number(e.target.id)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 29\n      }\n    }, pageNumber));\n  })));\n};\n\nexport default FeaturesTable;","map":{"version":3,"sources":["/Users/zoekatz/apps/cai-app/src/components/FeaturesTable/FeaturesTable.tsx"],"names":["React","useEffect","useTable","useSortBy","useGroupBy","usePagination","useResizeColumns","useRowSelect","HeaderCheckbox","RowCheckbox","FeaturesTable","columns","data","dispatch","setCurrentPage","pageNumbers","currentPage","selectionHook","hooks","allColumns","push","id","disableResizing","disableGroupBy","minWidth","width","maxWidth","Header","getToggleAllRowsSelectedProps","Cell","row","getToggleRowSelectedProps","useInstanceBeforeDimensions","headerGroups","selectionGroupHeader","headers","canResize","getTableProps","getTableBodyProps","rows","prepareRow","state","pageIndex","pageSize","selectedRowIds","console","log","type","payload","map","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","i","getRowProps","cells","cell","getCellProps","pageNumber","e","Number","target"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useTable, useSortBy, useGroupBy, usePagination, useResizeColumns, useRowSelect, Hooks, CellProps, HeaderProps} from 'react-table';\n//import FeaturesTablePagination from './FeaturesTablePagination';\nimport { HeaderCheckbox, RowCheckbox } from './FeaturesTableStyles';\n\n\nconst FeaturesTable = ({ columns, data, dispatch, setCurrentPage, pageNumbers, currentPage } : any) => {\n\n    const selectionHook = (hooks: Hooks<any>) => {\n        hooks.allColumns.push((columns: any) => [\n            {\n                id: '_selector',\n                disableResizing: true,\n                disableGroupBy: true,\n                minWidth: 45,\n                width: 45,\n                maxWidth: 45,\n                Header: ({ getToggleAllRowsSelectedProps }: HeaderProps<any>) => {\n\n                    return (\n                        <HeaderCheckbox {...getToggleAllRowsSelectedProps()}/>\n                    )\n                },\n                Cell: ({ row }: CellProps<any>) => <RowCheckbox {...row.getToggleRowSelectedProps()} />,\n            },\n            ...columns,\n        ]);\n        hooks.useInstanceBeforeDimensions.push(({ headerGroups }) => {\n            // fix the parent group of the selection button to not be resizable\n            const selectionGroupHeader = headerGroups[0].headers[0]\n            selectionGroupHeader.canResize = false\n        })\n    };\n\n    const hooks = [\n        useGroupBy,\n        useSortBy,\n        usePagination,\n        useResizeColumns,\n        useRowSelect,\n        selectionHook,\n    ];\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        state: { pageIndex, pageSize, selectedRowIds },\n    } = useTable({\n        columns,\n        data,\n    }, ...hooks);\n\n\n    useEffect(() => {\n        console.log(selectedRowIds, \"selectedRowIds\");\n        dispatch({type: 'SET_SELECTED_ROW_IDS', payload: { selectedRowIds: selectedRowIds }})\n    }, [selectedRowIds]);\n\n    return (\n        <>\n        <table {...getTableProps()}>\n            <thead>\n            {headerGroups.map(headerGroup => (\n                <tr {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map(column => (\n                        <th {...column.getHeaderProps()} {...column.getSortByToggleProps()}>{column.render('Header')}<span>\n                    {column.isSorted\n                        ? column.isSortedDesc\n                            ? ' ðŸ”½'\n                            : ' ðŸ”¼'\n                        : ''}\n                  </span></th>\n                    ))}\n                </tr>\n            ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n            {rows.map((row, i) => {\n                prepareRow(row)\n                return (\n                    <tr {...row.getRowProps()}>\n                        {row.cells.map(cell => {\n                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                        })}\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n            <ul id=\"page-numbers\">\n                {pageNumbers.map((pageNumber: any) => {\n                    return (\n                        <li key={pageNumber}>\n                            <button id={pageNumber} className={pageNumber === currentPage ? 'button-current' : 'next-buttons' } onClick={(e) => setCurrentPage(Number(e.target.id))}>{pageNumber}</button>\n                        </li>\n                    );\n                })}\n            </ul>\n        </>\n    )\n};\n\nexport default FeaturesTable;\n"]},"metadata":{},"sourceType":"module"}