{"ast":null,"code":"var _jsxFileName = \"/Users/zoekatz/apps/cai-app/src/components/FeaturesModal/FeaturesModal.tsx\";\nimport React, { useCallback, useContext, useEffect, useState, useMemo } from 'react';\nimport FeaturesTable from '../FeaturesTable/FeaturesTable';\nimport { fetchFeatures } from '../../lib/mock-api';\nimport FeaturesFilters from \"../FeaturesFilters/FeaturesFilters\";\nimport './FeaturesModal.scss';\nimport FeaturesContext from \"../../FeaturesContext\";\n\nconst FeaturesModal = () => {\n  const [featuresData, setFeaturesData] = useState([]);\n  const [featuresColumns] = useState([{\n    Header: 'NAME',\n    accessor: 'name'\n  }, {\n    Header: 'VARIABLE ID',\n    accessor: 'varId'\n  }, {\n    Header: 'DESCRIPTION',\n    accessor: 'description'\n  }, {\n    Header: 'DOMAINS',\n    accessor: 'domains'\n  }, {\n    Header: 'LABELS',\n    accessor: 'labels'\n  }, {\n    Header: 'SOURCES',\n    accessor: 'sources'\n  }, {\n    Header: 'VALUE',\n    accessor: 'value'\n  }]);\n  const {\n    dispatch,\n    query\n  } = useContext(FeaturesContext);\n  const getFeaturesData = useCallback(() => {\n    return fetchFeatures();\n  }, []);\n  useEffect(() => {\n    getFeaturesData().then(res => {\n      if (res) {\n        setFeaturesData(res.map(item => {\n          return { ...item,\n            ...item.attributes\n          };\n        }));\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  const filterFeaturesData = useMemo(() => {\n    debugger;\n    console.log(featuresData);\n    return featuresData.filter(feature => {\n      return feature.name.toLocaleLowerCase().indexOf(query.toLowerCase()) > -1 || feature.description.toLocaleLowerCase().indexOf(query.toLowerCase()) > -1;\n    });\n  }, [featuresData, query]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"features-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => {\n      dispatch({\n        type: 'SET_IS_DIALOG_OPEN',\n        payload: {\n          isDialogOpen: false\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"X\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FeaturesFilters, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FeaturesTable, {\n    columns: featuresColumns,\n    data: filterFeaturesData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default FeaturesModal;","map":{"version":3,"sources":["/Users/zoekatz/apps/cai-app/src/components/FeaturesModal/FeaturesModal.tsx"],"names":["React","useCallback","useContext","useEffect","useState","useMemo","FeaturesTable","fetchFeatures","FeaturesFilters","FeaturesContext","FeaturesModal","featuresData","setFeaturesData","featuresColumns","Header","accessor","dispatch","query","getFeaturesData","then","res","map","item","attributes","catch","err","console","log","filterFeaturesData","filter","feature","name","toLocaleLowerCase","indexOf","toLowerCase","description","type","payload","isDialogOpen"],"mappings":"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","sourcesContent":["import React, {useCallback, useContext, useEffect, useState, useMemo} from 'react';\nimport FeaturesTable from '../FeaturesTable/FeaturesTable';\nimport {fetchFeatures} from '../../lib/mock-api';\nimport {ICrNode} from \"../../lib/types\";\nimport FeaturesFilters from \"../FeaturesFilters/FeaturesFilters\";\nimport './FeaturesModal.scss';\nimport FeaturesContext from \"../../FeaturesContext\";\n\n\nconst FeaturesModal = () => {\n    const [featuresData, setFeaturesData] = useState<ICrNode[]>([]);\n    const [featuresColumns] = useState([\n        {\n            Header: 'NAME',\n            accessor: 'name',\n        },\n        {\n            Header: 'VARIABLE ID',\n            accessor: 'varId',\n        },\n        {\n            Header: 'DESCRIPTION',\n            accessor: 'description',\n        },\n        {\n            Header: 'DOMAINS',\n            accessor: 'domains',\n        },\n        {\n            Header: 'LABELS',\n            accessor: 'labels',\n        },\n        {\n            Header: 'SOURCES',\n            accessor: 'sources',\n        },\n        {\n            Header: 'VALUE',\n            accessor: 'value',\n        }\n    ]);\n    const {dispatch, query} = useContext(FeaturesContext);\n\n    const getFeaturesData = useCallback(() => {\n        return fetchFeatures();\n    }, []);\n\n    useEffect(() => {\n        getFeaturesData().then((res) => {\n            if(res) {\n                setFeaturesData(res.map(item => {\n                    return {\n                        ...item,\n                        ...item.attributes\n                    }\n                }));\n            }\n        }).catch((err) => {\n            console.log(err)\n        });\n    }, []);\n\n    const filterFeaturesData = useMemo(() => {\n        debugger;\n        console.log(featuresData)\n        return featuresData.filter(feature => {\n            return (feature.name.toLocaleLowerCase().indexOf(query.toLowerCase()) > -1) || (feature.description.toLocaleLowerCase().indexOf(query.toLowerCase()) > -1)\n        })\n    }, [featuresData, query]);\n\n    return (\n        <div className=\"features-modal\">\n            <div onClick={() => {dispatch({type: 'SET_IS_DIALOG_OPEN',payload: {isDialogOpen: false}})}}>X</div>\n            <div>\n                <FeaturesFilters/>\n                <FeaturesTable columns={featuresColumns} data={filterFeaturesData}/>\n            </div>\n        </div>\n    )\n};\n\nexport default FeaturesModal;\n"]},"metadata":{},"sourceType":"module"}