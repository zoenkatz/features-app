{"ast":null,"code":"var _jsxFileName = \"/Users/zoekatz/apps/cai-app/src/components/FeaturesTable/FeaturesTable.tsx\";\nimport React from 'react';\nimport { useTable, useSortBy } from 'react-table';\n\nconst FeaturesTable = ({\n  columns,\n  data\n}) => {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    HeaderProps,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useSortBy); // Render the UI for your table\n\n  return /*#__PURE__*/React.createElement(\"table\", Object.assign({}, getTableProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, headerGroups.map(headerGroup => /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, headerGroup.getHeaderGroupProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }), headerGroup.headers.map(column => /*#__PURE__*/React.createElement(\"th\", Object.assign({}, column.getHeaderProps(), column.getSortByToggleProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }), column.render('Header'), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 118\n    }\n  }, column.isSorted ? column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼' : '')))))), /*#__PURE__*/React.createElement(\"tbody\", Object.assign({}, getTableBodyProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), rows.map((row, i) => {\n    prepareRow(row);\n    return /*#__PURE__*/React.createElement(\"tr\", Object.assign({}, row.getRowProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }), row.cells.map(cell => {\n      return /*#__PURE__*/React.createElement(\"td\", Object.assign({}, cell.getCellProps(), {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 36\n        }\n      }), cell.render('Cell'));\n    }));\n  })));\n};\n\nexport default FeaturesTable;","map":{"version":3,"sources":["/Users/zoekatz/apps/cai-app/src/components/FeaturesTable/FeaturesTable.tsx"],"names":["React","useTable","useSortBy","FeaturesTable","columns","data","getTableProps","getTableBodyProps","headerGroups","HeaderProps","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAiG,aAAjG;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA6B;AAE/C;AACA,QAAM;AACFC,IAAAA,aADE;AAEFC,IAAAA,iBAFE;AAGFC,IAAAA,YAHE;AAIFC,IAAAA,WAJE;AAKFC,IAAAA,IALE;AAMFC,IAAAA;AANE,MAOFV,QAAQ,CAAC;AACTG,IAAAA,OADS;AAETC,IAAAA;AAFS,GAAD,EAGTH,SAHS,CAPZ,CAH+C,CAe/C;;AACA,sBACI,+CAAWI,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCE,YAAY,CAACI,GAAb,CAAiBC,WAAW,iBACzB,4CAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC3B,4CAAQA,MAAM,CAACC,cAAP,EAAR,EAAqCD,MAAM,CAACE,oBAAP,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAqEF,MAAM,CAACG,MAAP,CAAc,QAAd,CAArE,eAA6F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAChGH,MAAM,CAACI,QAAP,GACKJ,MAAM,CAACK,YAAP,GACI,KADJ,GAEI,KAHT,GAIK,EAL2F,CAA7F,CADH,CADL,CADH,CADD,CADJ,eAgBI,+CAAWd,iBAAiB,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACCG,IAAI,CAACE,GAAL,CAAS,CAACU,GAAD,EAAMC,CAAN,KAAY;AAClBZ,IAAAA,UAAU,CAACW,GAAD,CAAV;AACA,wBACI,4CAAQA,GAAG,CAACE,WAAJ,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACKF,GAAG,CAACG,KAAJ,CAAUb,GAAV,CAAcc,IAAI,IAAI;AACnB,0BAAO,4CAAQA,IAAI,CAACC,YAAL,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA8BD,IAAI,CAACP,MAAL,CAAY,MAAZ,CAA9B,CAAP;AACH,KAFA,CADL,CADJ;AAOH,GATA,CADD,CAhBJ,CADJ;AA+BH,CA/CD;;AAiDA,eAAehB,aAAf","sourcesContent":["import React from 'react';\nimport {useTable, useSortBy, useGroupBy, CellProps, FilterProps, FilterValue, IdType, Row } from 'react-table';\n\n\nconst FeaturesTable = ({ columns, data } : any) => {\n\n    // Use the state and functions returned from useTable to build your UI\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        HeaderProps,\n        rows,\n        prepareRow,\n    } = useTable({\n        columns,\n        data,\n    }, useSortBy);\n\n    // Render the UI for your table\n    return (\n        <table {...getTableProps()}>\n            <thead>\n            {headerGroups.map(headerGroup => (\n                <tr {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map(column => (\n                        <th {...column.getHeaderProps()} {...column.getSortByToggleProps()}>{column.render('Header')}<span>\n                    {column.isSorted\n                        ? column.isSortedDesc\n                            ? ' ðŸ”½'\n                            : ' ðŸ”¼'\n                        : ''}\n                  </span></th>\n                    ))}\n                </tr>\n            ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n            {rows.map((row, i) => {\n                prepareRow(row)\n                return (\n                    <tr {...row.getRowProps()}>\n                        {row.cells.map(cell => {\n                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                        })}\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n    )\n};\n\nexport default FeaturesTable;\n"]},"metadata":{},"sourceType":"module"}