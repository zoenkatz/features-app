{"ast":null,"code":"import { createContext } from 'react';\nconst appState = {\n  isDialogOpen: false\n};\nconst FeaturesContext = createContext({\n  state: appState,\n  dispatch: () => {}\n});\nexport default FeaturesContext;","map":{"version":3,"sources":["/Users/zoekatz/apps/cai-app/src/FeaturesContext.ts"],"names":["createContext","appState","isDialogOpen","FeaturesContext","state","dispatch"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,OAA5B;AAaA,MAAMC,QAAgB,GAAG;AACrBC,EAAAA,YAAY,EAAE;AADO,CAAzB;AAKA,MAAMC,eAAe,GAAGH,aAAa,CAAW;AAC5CI,EAAAA,KAAK,EAAEH,QADqC;AAE5CI,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAF0B,CAAX,CAArC;AAMA,eAAeF,eAAf","sourcesContent":["import {createContext} from 'react';\nimport {NodeTypes} from \"./lib/types\";\n\ninterface IState {\n    isDialogOpen: boolean;\n}\n\ninterface IContext {\n    state: IState,\n    dispatch: any\n}\n\n\nconst appState: IState = {\n    isDialogOpen: false\n};\n\n\nconst FeaturesContext = createContext<IContext>({\n    state: appState,\n    dispatch: () => {}\n\n});\n\nexport default FeaturesContext;\n"]},"metadata":{},"sourceType":"module"}