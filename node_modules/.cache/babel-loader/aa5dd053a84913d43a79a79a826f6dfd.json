{"ast":null,"code":"var _jsxFileName = \"/Users/zoekatz/apps/cai-app/src/components/FeaturesFilters/FeaturesFilters.tsx\";\nimport React, { useCallback, useContext, useMemo } from 'react';\nimport FeaturesButton from '../FeaturesButton/FeaturesButton';\nimport FeaturesInput from '../FeaturesInput/FeaturesInput';\nimport FeaturesContext from \"../../FeaturesContext\";\nimport FeaturesSelect from \"../FeaturesSelect/FeaturesSelect\";\n\nconst FeaturesFilters = ({\n  featuresModelMetadata\n}) => {\n  const {\n    dispatch,\n    query\n  } = useContext(FeaturesContext);\n  const handleDeleteSelected = useCallback(() => {}, []);\n  const handleSearch = useCallback(event => {\n    dispatch({\n      type: 'SET_SEARCH_QUERY',\n      payload: {\n        query: event.target.value\n      }\n    });\n  }, []);\n  return useMemo(() => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FeaturesButton, {\n      onClickButton: handleDeleteSelected,\n      buttonValue: \"DELETE SELECTED\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FeaturesInput, {\n      inputName: \"search-features\",\n      inputType: \"search\",\n      inputOnChange: handleSearch,\n      inputValue: query,\n      inputPlaceholder: \"Search...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FeaturesSelect, {\n      selectName: \"filter-labels\",\n      selectValue: \"Filter by label\",\n      selectOnChange: () => {},\n      selectOptions: featuresModelMetadata.labels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }));\n  }, [query, featuresModelMetadata]);\n};\n\nexport default FeaturesFilters;","map":{"version":3,"sources":["/Users/zoekatz/apps/cai-app/src/components/FeaturesFilters/FeaturesFilters.tsx"],"names":["React","useCallback","useContext","useMemo","FeaturesButton","FeaturesInput","FeaturesContext","FeaturesSelect","FeaturesFilters","featuresModelMetadata","dispatch","query","handleDeleteSelected","handleSearch","event","type","payload","target","value","labels"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,UAA5B,EAAwCC,OAAxC,QAAsD,OAAtD;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAmC;AACvD,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAoBT,UAAU,CAACI,eAAD,CAApC;AACA,QAAMM,oBAAoB,GAAGX,WAAW,CAAC,MAAM,CAE9C,CAFuC,EAErC,EAFqC,CAAxC;AAGA,QAAMY,YAAY,GAAGZ,WAAW,CAAEa,KAAD,IAAW;AACxCJ,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAE,kBAAP;AAA2BC,MAAAA,OAAO,EAAE;AAACL,QAAAA,KAAK,EAAEG,KAAK,CAACG,MAAN,CAAaC;AAArB;AAApC,KAAD,CAAR;AACH,GAF+B,EAE7B,EAF6B,CAAhC;AAIA,SAAOf,OAAO,CAAC,MAAM;AACjB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,cAAD;AAAgB,MAAA,aAAa,EAAES,oBAA/B;AAAqD,MAAA,WAAW,EAAC,iBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,aAAD;AAAe,MAAA,SAAS,EAAC,iBAAzB;AAA2C,MAAA,SAAS,EAAC,QAArD;AAA8D,MAAA,aAAa,EAAEC,YAA7E;AAA2F,MAAA,UAAU,EAAEF,KAAvG;AAA8G,MAAA,gBAAgB,EAAC,WAA/H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,cAAD;AAAgB,MAAA,UAAU,EAAC,eAA3B;AAA2C,MAAA,WAAW,EAAC,iBAAvD;AAAyE,MAAA,cAAc,EAAE,MAAM,CAAE,CAAjG;AAAmG,MAAA,aAAa,EAAEF,qBAAqB,CAACU,MAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ;AAOH,GARa,EAQX,CAACR,KAAD,EAAQF,qBAAR,CARW,CAAd;AASH,CAlBD;;AAoBA,eAAeD,eAAf","sourcesContent":["import React, {useCallback, useContext, useMemo} from 'react';\nimport FeaturesButton from '../FeaturesButton/FeaturesButton';\nimport FeaturesInput from '../FeaturesInput/FeaturesInput';\nimport FeaturesContext from \"../../FeaturesContext\";\nimport FeaturesSelect from \"../FeaturesSelect/FeaturesSelect\";\n\nconst FeaturesFilters = ({featuresModelMetadata} : any) => {\n    const {dispatch, query} = useContext(FeaturesContext);\n    const handleDeleteSelected = useCallback(() => {\n\n    }, []);\n    const handleSearch = useCallback((event) => {\n        dispatch({type: 'SET_SEARCH_QUERY', payload: {query: event.target.value}})\n    }, []);\n\n    return useMemo(() => {\n        return (\n            <div>\n                <FeaturesButton onClickButton={handleDeleteSelected} buttonValue=\"DELETE SELECTED\"/>\n                <FeaturesInput inputName=\"search-features\" inputType=\"search\" inputOnChange={handleSearch} inputValue={query} inputPlaceholder=\"Search...\"/>\n                <FeaturesSelect selectName=\"filter-labels\" selectValue=\"Filter by label\" selectOnChange={() => {}} selectOptions={featuresModelMetadata.labels}/>\n            </div>\n        )\n    }, [query, featuresModelMetadata])\n};\n\nexport default FeaturesFilters;\n"]},"metadata":{},"sourceType":"module"}